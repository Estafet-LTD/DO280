# Before start a lab:

# 1. Log in to your cluster as a cluster-admin user.

# 2. Get the default cluster domain name:
$ set OC_DOMAIN_NAME="$(oc -n openshift-ingress-operator get ingresscontroller/default \
 -o jsonpath='{.status.domain}{"\n"}')"
$ echo "${OC_DOMAIN_NAME}"
  apps.openshift.nyx.lab.local

# 3. Change to the lab's working directory, e.g. "chapter-5/network-review" for the network-review lab
#    and create the certs directory.
$ cd chapter5/network-review && mkdir certs

# In the lab, generating a TLS certiifcate consists of three steps:

# 1. Run the following command to create a private key
$ openssl genrsa -out ./certs/training.key 2048

# 2. Run the following command to generate a CSR for the private key.
#
#    The fields in the subject (-subj) can be whatever you like.
#
#    If a route is created with a specified hostname (via the --hostname argument), the route
#    DNS name is the value of the hostname aregument. For example: "<route name>.${OC_DOMAIN_NAME}".
#    Othewise, the route DNS name will be "<route name>-<namespace name>.${OC_DOMAIN_NAME}".
$ openssl req -new \
-key certs/training.key \
-out certs/training.csr \
-subj "/C=GB/ST=Surrey/L=Surbiton/O=Estafet Ltd/OU=Training/CN=apps-crc.testing"
-addext " = DNS:<route DNS name>"

# 3. Run the following command to generate a certificate from the CSR
$ openssl x509 \
-copy_extensions copy \
-ext subjectAltName \
-req \
-in certs/training.csr \
-CA ${TRAINING_CA_DIR}/training-CA.crt \
-CAkey ${TRAINING_CA_DIR}/training-CA.key \
-CAcreateserial \
-passin file:${TRAINING_CA_DIR}/ca_password.txt \
-out certs/training.crt \
-days 1650 \
-sha256

# At the end of these steps, the certs directory should have these three files:
#
# 1. The private key, training.key
# 2. The CSR, training.csr
# 3. The public certificate, training.crt

You can use "openssl x509 -in certs/training.crt -noout -text" to view the certificate's details, and
"openssl req -in certs/training.csr -noout -text" to view the CSR's details.
